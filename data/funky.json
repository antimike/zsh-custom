{"keys": "#!/bin/zsh -f\n\nwhile read map\ndo\n        bindkey -M $map | sed \"s/^/${map}:/\"\ndone < <(bindkey -l) | column -t -s: | fzf", "icons": "# Get overall terminal dimensions\n< <(</dev/tty stty size) \\\n        read TERMINAL_LINES TERMINAL_COLUMNS\n\n# Ensure graphics are cleared on completion, including interrupts\ntrap 'kitty +kitten icat --clear' EXIT SIGINT\n\n# Get cursor position using ANSI witchcraft\necho -ne '\\033[6n' >/dev/tty && IFS='[;' </dev/tty read -t 1 -s -d 'R' _ CURSOR_Y CURSOR_X _\n\nfind /usr/share/icons -type f | fzf --preview=\"\n        BOT=\\$((CURSOR_Y + FZF_PREVIEW_LINES > TERMINAL_LINES ? TERMINAL_LINES : CURSOR_Y + FZF_PREVIEW_LINES))\n        TOP=\\$((BOT - FZF_PREVIEW_LINES + 2))\n        kitty +kitten icat --transfer-mode file --clear &&\n        kitty +kitten icat \\\n                --place=\\${FZF_PREVIEW_COLUMNS}x\\${FZF_PREVIEW_LINES}@\\$((TERMINAL_COLUMNS - FZF_PREVIEW_COLUMNS - 4))x\\${TOP} \\\n                --silent --transfer-mode file {}\n        \"", "fonts": "#!/bin/zsh -f\n# FZF widget to preview and select a font\n# NOTE: Not sure why, but the alignment is slightly off if /bin/zsh is used\n\n# From fzf-ueberzug\nlocal -r -x LOGFILE=\"~/.cache/logs/$0.log\"\nlocal -r -x DEFAULT_PREVIEW_POSITION=\"right\"\n\n# Use --transfer-mode file to display icat image in FZF\nlocal -r -x ICAT='kitty +kitten icat --place=${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}@$((TERMINAL_COLUMNS - FZF_PREVIEW_COLUMNS))x${TOP} --silent --transfer-mode file'\nlocal -x TERMINAL_LINES TERMINAL_COLUMNS\nlocal -x CURSOR_X CURSOR_Y\n\n# From font-preview\nlocal -x SEARCH_PROMPT=\"\u276f \"\nlocal -x SIZE=532x365\nlocal -x POSITION=\"+0+0\"\nlocal -x FONT_SIZE=38\nlocal -x BG_COLOR=\"#ffffff\"\nlocal -x FG_COLOR=\"#000000\"\nlocal -x PREVIEW_TEXT=\"ABCDEFGHIJKLM\\nNOPQRSTUVWXYZ\\nabcdefghijklm\\nnopqrstuvwxyz\\n1234567890\\n!@$\\%()\\{\\}[]\"\n\nlocal -r -x IMAGE_CACHE_DIR=~/.cache/fzf-previews/fonts\nmkdir -p \"$IMAGE_CACHE_DIR\"\n\n# Get overall terminal dimensions\n< <(</dev/tty stty size) \\\n        read TERMINAL_LINES TERMINAL_COLUMNS\n\n# TODO: Add support for Guake-friendly preview method\ntrap \"kitty +kitten icat --clear\" EXIT SIGINT\n\n# Get cursor position using ANSI witchcraft\necho -ne '\\033[6n' >/dev/tty && IFS='[;' </dev/tty read -t 1 -s -d 'R' _ CURSOR_Y CURSOR_X _\n\n# List fonts with imagemagick and feed the list to FZF\nconvert -list font | awk -F: '/^[ ]*Font: /{print substr($NF,2)}' |\n        fzf --prompt=\"$SEARCH_PROMPT\" --preview=\"\n                BOT=\\$((CURSOR_Y + FZF_PREVIEW_LINES > TERMINAL_LINES ? TERMINAL_LINES : CURSOR_Y + FZF_PREVIEW_LINES))\n                TOP=\\$((BOT - FZF_PREVIEW_LINES + 2))\n                kitty +kitten icat --transfer-mode file --clear\n                PREVIEW=${IMAGE_CACHE_DIR}/{}.png\n                if [[ ! -e \\\"\\$PREVIEW\\\" ]]; then\n                        convert -size \\\"$SIZE\\\" \\\n                                xc:none \\\n                                -background transparent \\\n                                -gravity center \\\n                                -pointsize \\\"$FONT_SIZE\\\" \\\n                                -font {} \\\n                                -fill \\\"$BG_COLOR\\\" \\\n                                -annotate +0+0 \\\"$PREVIEW_TEXT\\\" \\\n                                -flatten \\\"\\$PREVIEW\\\" \\\n                                >>\\\"$LOGFILE\\\" 2>&1 &\n                        wait\n                fi\n                ${ICAT} \\\"\\$PREVIEW\\\"\"", "themes": "#!/bin/zsh -f\n# Explore themes with FZF\n\ntypeset -a types=(\n        kitty\n        i3\n        nvim\n        icons\n        rofi\n)\ntypeset -A cmds=(\n        [kitty]=\"kitty +kitten themes\"\n        [rofi]=\"rofi-theme-selector\"\n)\npick_i3_theme() {\n        i3-style $(i3-style -l | fzf | awk '{print $1;}') -o ~/.config/i3/config --reload\n}\nprint \"Not implemented!\" >&2", "underline": "zmodload zsh/zutil\nlocal -A opts=(\n        [-u]='-'\n        [-s]=\n)\n\nzparseopts -D -E -K -A opts -- u: s:\n\nlocal uchar=${${opts[-u]}[1]:--}        # Underline char\nlocal schar=${${opts[-s]}[1]}           # Char printed under whitespace\nprint -l -- \"$*\" \"$(tr '[:graph:]' \"[${uchar}*]\" <<<\"$*\" \\\n        | () { [[ -n $schar ]] && tr '[:blank:]' \"[${schar}*]\" || cat; })\"", "find_git_repos": "#!/bin/zsh -f\n# Find all git repos under a given parent directory\n# Taken from `man find(1)`\n\nfind $1 \\\n        \\( -exec test -d '{}.git' \\; \\) \\\n        -print -prune", "zhooks": "#!/bin/zsh\n# Display and fuzzy-search all active zsh hooks\n\nlocal -a hook_arrs=(\n        chpwd_functions\n        periodic_functions\n        precmd_functions\n        preexec_functions\n        zshaddhistory_functions\n        zsh_directory_name_functions\n        zshexit_functions\n)\n\nfor arr in $hook_arrs; do\n        for fn in ${(P)arr}; do\n                print \"${arr}:${fn}:$(whence -v ${fn} | awk '{print $NF}')\"\n        done\ndone | column -t -s: | fzf --preview=\"\n        [[ -e {3} ]] && bat --force-colorization -l zsh {3} || print {}\n        \" --bind 'enter:execute(pistol {3})'", "bg-fav": "#!/bin/zsh -f\n# Add current backgrounds (from ~/.fehbg) to favorites file\n\n# Keep options local and allow multiple redirects (for logging + IO)\nemulate -L zsh\nsetopt MULTIOS\nexec 1>&1 &>>~/.cache/logs/${0}.log            # Logging\n\ndeclare -r -x DEFAULT_PREVIEW_POSITION=\"right\"\ndeclare -r -x ICAT='kitty +kitten icat --place=${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}@$((TERMINAL_COLUMNS - FZF_PREVIEW_COLUMNS))x${TOP} --silent --transfer-mode file'\ndeclare -x TERMINAL_LINES TERMINAL_COLUMNS\ndeclare -x CURSOR_X CURSOR_Y\ndeclare -x SEARCH_PROMPT=\"\u276f \"\n\nlocal FAV_FILE=~/.config/i3/data/favorites/wallpapers.txt\nmkdir -p $(dirname $FAV_FILE) || return 1\n\n_get_current_wallpapers() {\n        tail -1 ~/.fehbg | cut -d' ' -f4-\n}\n\n${(A)walls:=${=$(_get_current_wallpapers)}}\nlocal -i screen\n\nfzf \\\n        --preview=", "glist": "#!/bin/zsh -f\n# List shell functions defined by gfunky\n\ngfunky | grep -o '^[a-zA-Z_-]\\+'"}